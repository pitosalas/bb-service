<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="Blog">

    <typeAlias alias="blog" type="com.salas.bbservice.domain.Blog"/>

    <insert id="insert" parameterClass="blog">
        INSERT INTO Blogs (
        title,
        author,
        description,
        htmlUrl,
        dataUrl,
        inboundLinks,
        rank,
        category,
        location,
        status,
        lastAccessTime,
        lastUpdateTime,
        incompleteDiscovery)
        VALUES (
        #title#,
        #author#,
        #description#,
        #htmlUrl#,
        #dataUrl#,
        #inboundLinks#,
        #rank#,
        #category#,
        #location#,
        #status#,
        #lastAccessTime#,
        #lastUpdateTime#,
        #incompleteDiscovery#)
        <selectKey resultClass="int" keyProperty="id">
            SELECT LAST_INSERT_ID() as id
        </selectKey>
    </insert>

    <update id="update" parameterClass="blog">
        UPDATE Blogs
        SET title = #title#,
        author = #author#,
        description = #description#,
        htmlUrl = #htmlUrl#,
        dataUrl = #dataUrl#,
        inboundLinks = #inboundLinks#,
        rank = #rank#,
        category = #category#,
        location = #location#,
        status = #status#,
        lastAccessTime = #lastAccessTime#,
        lastUpdateTime = #lastUpdateTime#,
        incompleteDiscovery = #incompleteDiscovery#
        WHERE id = #id#
    </update>

    <delete id="delete" parameterClass="blog">
        DELETE FROM Blogs WHERE id = #id#
    </delete>

    <delete id="deleteBlogs" parameterClass="string">
        DELETE FROM Blogs WHERE $value$
    </delete>

    <select id="findById" parameterClass="int" resultClass="blog">
        SELECT * FROM Blogs WHERE id = #value#
    </select>

    <select id="findByDataUrl" parameterClass="string" resultClass="blog">
        SELECT * FROM Blogs WHERE dataUrl = #value#
    </select>

    <select id="findUpdatedBefore" parameterClass="java.util.Map" resultClass="blog">
      <![CDATA[
        SELECT *
        FROM Blogs
        WHERE lastUpdateTime < #lastUpdateTime# AND
              incompleteDiscovery = 0 AND
              dataUrl <> '~bad_blog~'
        ORDER BY lastUpdateTime
        LIMIT #max#
      ]]>
    </select>

    <select id="findIncompletedBefore" parameterClass="java.util.Map" resultClass="blog">
      <![CDATA[
        SELECT *
        FROM Blogs
        WHERE lastUpdateTime < #lastUpdateTime# AND
              incompleteDiscovery = 1 AND
              dataUrl <> '~bad_blog~'
        ORDER BY lastUpdateTime
        LIMIT #max#
      ]]>
    </select>

    <select id="findAccessedBefore" parameterClass="long" resultClass="int">
      <![CDATA[
        SELECT b.id
        FROM Blogs b LEFT JOIN BlogCommunityFields f ON b.id = f.blogId
        WHERE b.lastAccessTime < #value# AND blogId IS NULL
        ORDER BY b.lastAccessTime ASC
      ]]>
    </select>

    <delete id="deleteOld" parameterClass="java.util.Map">
      <![CDATA[
        DELETE FROM Blogs
        WHERE lastAccessTime < #lastAccessTime#
        ORDER BY lastAccessTime ASC
        LIMIT #max#
      ]]>
    </delete>

    <select id="getTotalRecords" resultClass="int">
        SELECT COUNT(*) FROM Blogs
    </select>

    <!--
      Returns LRU blogs records having no community fields assigned.
    -->
    <select id="selectLRU" parameterClass="int" resultClass="blog">
        <![CDATA[
          SELECT b.*
          FROM Blogs b LEFT JOIN BlogCommunityFields f ON b.id = f.blogId
          WHERE blogId IS NULL
          ORDER BY lastAccessTime ASC LIMIT #value#
        ]]>
    </select>

</sqlMap>
